/*
	Герасимчик Анна. 1 курс 2 семестр.

	Гоблины Мглистых гор очень любях ходить к своим шаманам. 
	Так как гоблинов много, к шаманам часто образуются очень длинные очереди. 
	А поскольку много гоблинов в одном месте быстро образуют шумную толку, 
	которая мешает шаманам проводить сложные медицинские манипуляции, последние 
	решили установить некоторые правила касательно порядка в очереди.

	Обычные гоблины при посещении шаманов должны вставать в конец очереди. 
	Привилегированные же гоблины, знающие особый пароль, встают ровно в ее середину, 
	причем при нечетной длине очереди они встают сразу за центром.
	
	Так как гоблины также широко известны своим непочтительным отношением ко 
	всяческим правилам и законам, шаманы попросили вас написать программу, которая 
	бы отслеживала порядок гоблинов в очереди.
	
	Входные данные
	В первой строке входных данный записано число N (1N105) - количество запросов к программе. 
	Следующие N строк содержат описание запросов в формате:
		"+ i" - гоблин с номером i (1iN) встает в конец очереди.
		"* i" - привилегированный гоблин с номером i встает в середину очереди.
		"-" - первый гоблин из очереди уходит к шаманам. Гарантируется, что на момент такого 
		запроса очередь не пуста.

	Выходные данные
	Для каждого запроса типа "-" программа должна вывести номер гоблина, который должен зайти к шаманам.
	Примеры
	input
	7
	+ 1
	+ 2
	-
	+ 3
	+ 4
	-
	-
	output
	1
	2
	3
	Решение:
	Заводим очередь. Если "+", то добавляем элемент в очередь. 
	Если "-", то выводим в файл и вынимаем элемент. 
	Если "*", то вызываем функцию вставки гоблина с введенным номером в середину очереди, 
	используя вторую очередь.
*/
#include <iostream>
#include <fstream>
#include <queue>

using namespace std;

queue <int> insertGoblin(queue <int> q, const int x)
{
	int m = q.size() / 2;
	if (q.size() % 2)
	{
		m++;
	}
	queue <int> q2;
	for (int i = 0; i < m; i++)
	{
		q2.push(q.front());
		q.pop();
	}
	q2.push(x);
	m = q.size();
	for (int i = 0; i < m; i++)
	{
		q2.push(q.front());
		q.pop();
	}
	return q2;
}

int main()
{
	ifstream fin("input.txt");
	ofstream fout("output.txt");

	queue <int> q;
	int n;
	fin >> n;
	for (int i = 0; i < n; i++)
	{
		char c;
		fin >> c;
		if (c != '-')
		{
			int x;
			fin >> x;
			if (c == '+')
			{
				q.push(x);
			}
			else
			{
				q = insertGoblin(q, x);
			}
		}
		else
		{
			fout << q.front() << endl;
			q.pop();
		}
	}
	return 0;
}