/*
	Герасимчик Анна. 1 курс. 7 группа.
	Условие:
	C10.	Даны две последовательности A=(ai) ,  i=1..n, (n,<=10) и В=(bj), j=1..m, (m<=10) целых чисел.
	Найти максимальную длину последовательности, являющейся подпоследовательностью обеих  последовательностей.
	Количество операций порядка n*k.
	Идея:
	Заметим, что если последний элемент в последовательностях одинаков, то его можно включать в найденную
	подпоследовательность, т.е. увеличить подпоследовательность на 1. Далее исключаем этот элемент из
	рассмотрения, как уже найденный, и анализируем укороченные на этот элемент последовательности.
	Если последние элементы не совпадают, то по по крайней мере один из них не может быть частью общей подпоследовательности.
	Поочередно укорачиваем каждую строку на один символ и выбираем комбинацию с наибольшей длиной общей подпоследовательности.
	Итого у нас есть рекурсивная формула, зависящая от предыдущих элементов.
	Тесты:
	input					output
1	5 5						4
	1 2 3 4 5
	5 1 2 3 4
2	2 2						0
	1 2
	3 4
3	10 10					8
	1 2 3 4 5 6 7 8 9 10
	1 2 5 3 4 6 7 8 10 9
4	5 5						3
	1 5 2 3 4
	5 2 4 3 1
5	2 2						1
	0 1
	1 0
*/

#include <iostream>
#include <algorithm>

using namespace std;

int num1, num2;
int arr1[10];
int arr2[10];

void input()
{
	cout << "Введите количество элементов 2 последовательностей" << endl;
	cin >> num1 >> num2;

	cout << "Введите последовательность 1" << endl;
	for (int i = 0; i < num1; i++)
		cin >> arr1[i];

	cout << "Введите последовательность 2" << endl;
	for (int i = 0; i < num2; i++)
		cin >> arr2[i];
}

int lcsLength(int num1, int num2)
{
	// если последовательности не содержат элементов
	if ((num1 == 0) || (num2 == 0))
		return 0;
	else
		// если последние элементы последовательностей равны между собой
		if (arr1[num1 - 1] == arr2[num2 - 1])
			return 1 + lcsLength(num1 - 1, num2 - 1);
		else
			// выбираем максимальную предыдущую подпоследовательность
			return max(lcsLength(num1, num2 - 1), lcsLength(num1 - 1, num2));
}

void output()
{
	cout << "Максимальная длина последовательности, которая является подпоследовательностью обеих последовательностей" << endl;
	cout << lcsLength(num1, num2) << endl;
}

int main() {

	setlocale(LC_ALL, ".1251");
	input();
	output();
	system("pause");
	return 0;
}